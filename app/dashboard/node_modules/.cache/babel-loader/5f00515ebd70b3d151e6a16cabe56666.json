{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'base-table',\n  props: {\n    columns: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      description: \"Table columns\"\n    },\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      description: \"Table data\"\n    },\n    type: {\n      type: String,\n      // striped | hover\n      default: \"\",\n      description: \"Whether table is striped or hover type\"\n    },\n    theadClasses: {\n      type: String,\n      default: '',\n      description: \"<thead> css classes\"\n    },\n    tbodyClasses: {\n      type: String,\n      default: '',\n      description: \"<tbody> css classes\"\n    }\n  },\n  computed: {\n    tableClass: function tableClass() {\n      return this.type && \"table-\".concat(this.type);\n    }\n  },\n  methods: {\n    hasValue: function hasValue(item, column) {\n      return item[column.toLowerCase()] !== \"undefined\";\n    },\n    itemValue: function itemValue(item, column) {\n      return item[column.toLowerCase()];\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA;AACAA,oBADA;AAEAC;AACAC;AACAC,iBADA;AAEAC;AAAA;AAAA,OAFA;AAGAC;AAHA,KADA;AAMAC;AACAH,iBADA;AAEAC;AAAA;AAAA,OAFA;AAGAC;AAHA,KANA;AAWAF;AACAA,kBADA;AACA;AACAC,iBAFA;AAGAC;AAHA,KAXA;AAgBAE;AACAJ,kBADA;AAEAC,iBAFA;AAGAC;AAHA,KAhBA;AAqBAG;AACAL,kBADA;AAEAC,iBAFA;AAGAC;AAHA;AArBA,GAFA;AA6BAI;AACAC,cADA,wBACA;AACA;AACA;AAHA,GA7BA;AAkCAC;AACAC,YADA,oBACAC,IADA,EACAC,MADA,EACA;AACA;AACA,KAHA;AAIAC,aAJA,qBAIAF,IAJA,EAIAC,MAJA,EAIA;AACA;AACA;AANA;AAlCA","names":["name","props","columns","type","default","description","data","theadClasses","tbodyClasses","computed","tableClass","methods","hasValue","item","column","itemValue"],"sourceRoot":"src/components","sources":["BaseTable.vue"],"sourcesContent":["<template>\n  <table class=\"table tablesorter\" :class=\"tableClass\">\n    <thead :class=\"theadClasses\">\n    <tr>\n      <slot name=\"columns\">\n        <th v-for=\"column in columns\" :key=\"column\">{{column}}</th>\n      </slot>\n    </tr>\n    </thead>\n    <tbody :class=\"tbodyClasses\">\n    <tr v-for=\"(item, index) in data\" :key=\"index\">\n      <slot :row=\"item\">\n        <td v-for=\"(column, index) in columns\"\n            :key=\"index\"\n            v-if=\"hasValue(item, column)\">\n          {{itemValue(item, column)}}\n        </td>\n      </slot>\n    </tr>\n    </tbody>\n  </table>\n</template>\n<script>\n  export default {\n    name: 'base-table',\n    props: {\n      columns: {\n        type: Array,\n        default: () => [],\n        description: \"Table columns\"\n      },\n      data: {\n        type: Array,\n        default: () => [],\n        description: \"Table data\"\n      },\n      type: {\n        type: String, // striped | hover\n        default: \"\",\n        description: \"Whether table is striped or hover type\"\n      },\n      theadClasses: {\n        type: String,\n        default: '',\n        description: \"<thead> css classes\"\n      },\n      tbodyClasses: {\n        type: String,\n        default: '',\n        description: \"<tbody> css classes\"\n      }\n    },\n    computed: {\n      tableClass() {\n        return this.type && `table-${this.type}`;\n      }\n    },\n    methods: {\n      hasValue(item, column) {\n        return item[column.toLowerCase()] !== \"undefined\";\n      },\n      itemValue(item, column) {\n        return item[column.toLowerCase()];\n      }\n    }\n  };\n</script>\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module"}